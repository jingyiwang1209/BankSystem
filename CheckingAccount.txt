package com.Banking;

public class CheckingAccount extends Account
{
	private Double overdraftProtection;
	
	
  public CheckingAccount(double balance)
	{
		super(balance);
		// TODO Auto-generated constructor stub
	}


public CheckingAccount(double balance, Double overdraftProtection)
{
	super(balance);
	this.overdraftProtection = overdraftProtection;
}


@Override
public void withdraw(double amount)
{
	if(amount<=balance)
	{
		balance=balance-amount;
		
    }
	
	else
	{
		if(overdraftProtection==null)
		{
			throw new OverdraftException("no overdraft protection!",(amount-balance));
		}
		else if(overdraftProtection<(amount-balance))
		{
			throw new OverdraftException("Insufficient funds for overdraft protection!", ((amount-balance))-overdraftProtection);
		}
		else
		{
			overdraftProtection=overdraftProtection-(amount-balance);
			balance=0;
		}
	}




  
  
	
	
	

	
//When overdraft is the balance of saving account
// private SavingAccount protectedBy;
//public CheckingAccount(double balance, SavingAccount protectedBy)
//{
//	super(balance);
//	this.protectedBy= protectedBy;
//}


//@Override
//public void withdraw(double amount) 
//{
//	  if(amount<=balance)
//	  {
//		  balance=balance-amount;
//	  }
//	  else
//	  {
//		  if(protectedBy!=null&&protectedBy.getBalance()>=(amount-balance))
//		  {
//			 protectedBy.withdraw(amount-balance);
//			  balance=0;
//			 
//		  }
//		  else
//		  {   
//			  balance=0;
//
//			  return false;
//			  
//		  }
//	  }
//	return true;
	
}





  
   
}
